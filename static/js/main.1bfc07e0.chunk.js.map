{"version":3,"sources":["components/ExperienceInputList.js","components/Experience.js","components/PersonalInfo.js","components/EducationInputList.js","components/Education.js","components/Editor.js","components/PreviewHeader.js","components/EducationOutputList.js","components/ExperienceOutputList.js","components/PreviewMain.js","components/PreviewPersonal.js","components/Preview.js","components/Body.js","App.js","index.js"],"names":["ExperienceInputList","props","updateExperience","bind","deleteExperience","uniqid","func","event","experienceItem","key","target","value","this","experienceList","updateExperienceList","deleteExperienceList","className","map","type","placeholder","defaultValue","onChange","e","onClick","React","Component","Experience","addExperienceList","PersonalInfo","handler","funct","setFirstName","setLastName","setTitle","setAddress","setPhoneNumber","setEmail","setDescription","currentState","firstName","lastName","title","address","phoneNumber","email","description","EducationInputList","updateEducation","deleteEducation","educationItem","educationList","updateEducationList","deleteEducationList","Education","addEducation","institution","city","degree","major","from","to","addEducationList","Editor","printDiv","window","print","clearAll","PreviewHeader","EducationListOutput","ExperienceOutputList","PreviewMain","id","PreviewPersonal","Preview","Body","state","inputFirstName","setState","inputLastName","inputTitle","inputAddress","inputPhoneNumber","inputEmail","inputDescription","educationInput","concat","experienceInput","company","position","newEducation","console","log","index","findIndex","item","updatedEducationList","update","$splice","newExperience","updatedExperienceList","filteredArray","filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bfc07e0.chunk.js","sourcesContent":["import React from \"react\";\n\nclass ExperienceInputList extends React.Component{\n\n\n    constructor(props){\n        super(props);\n        this.updateExperience = this.updateExperience.bind(this);\n        this.deleteExperience = this.deleteExperience.bind(this);\n    }\n\n    deleteExperience( uniqid, func) {\n        func(uniqid);\n    }\n\n    updateExperience( event, experienceItem, uniqid, key, func) {\n        experienceItem[key] = event.target.value;\n        func( experienceItem, uniqid);\n    }    \n    render() {\n        const {experienceList, updateExperienceList , deleteExperienceList} = this.props;\n\n        return (\n            <div className = \"experience-input-list\">\n                {experienceList.map( (experienceItem) => {\n                    return <div className = \"experience-inputs\" key = {experienceItem.uniqid}>\n                            <input type = \"text\" placeholder = \"Company\" defaultValue = {experienceItem[\"company\"]} \n                            onChange = {(e) => { this.updateExperience(e, experienceItem, experienceItem.uniqid, \"company\", updateExperienceList) }}/>\n                            <input type = \"text\" placeholder = \"Position\" defaultValue = {experienceItem[\"position\"]}\n                            onChange = {(e) => { this.updateExperience(e, experienceItem, experienceItem.uniqid, \"position\", updateExperienceList) }}/>\n                            <input type = \"text\" placeholder = \"City\" defaultValue = {experienceItem[\"city\"]}\n                            onChange = {(e) => { this.updateExperience(e, experienceItem, experienceItem.uniqid, \"city\", updateExperienceList) }}/>\n                            <input type = \"text\" placeholder = \"From\" defaultValue = {experienceItem[\"from\"]}\n                            onChange = {(e) => { this.updateExperience(e, experienceItem, experienceItem.uniqid, \"from\", updateExperienceList) }}/>\n                            <input type = \"text\" placeholder = \"To\" defaultValue = {experienceItem[\"to\"]}\n                            onChange = {(e) => { this.updateExperience(e, experienceItem, experienceItem.uniqid, \"to\", updateExperienceList) }}/>\n                            <button className = \"delete-button\" onClick = { (e) => {this.deleteExperience(experienceItem.uniqid, deleteExperienceList)} }>Delete</button>\n                    </div>;\n                })} \n                \n            </div>\n        );\n    }\n}\n\nexport default ExperienceInputList;","import React from \"react\";\nimport ExperienceInputList from \"./ExperienceInputList\";\nclass Experience extends React.Component{\n\n\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        const {experienceList, addExperienceList, updateExperienceList , deleteExperienceList} = this.props;\n        return (\n\n            <div className = \"experience\"> \n                <h1 className = \"editor-header\">Experience</h1>\n                {/*list of experience inputs*/}\n                <ExperienceInputList experienceList = {experienceList} updateExperienceList = {updateExperienceList}\n                deleteExperienceList ={deleteExperienceList}/>\n                <button className = \"add-button\" onClick = {addExperienceList}>Add</button>\n            </div>\n        );\n    }\n}\n\nexport default Experience;","import React from \"react\";\n\nclass PersonalInfo extends React.Component{\n\n    \n\n    constructor(props){\n        super(props);\n        this.handler = this.handler.bind(this);\n    }\n\n    handler( event, funct ) {\n        funct( event.target.value);\n    }\n\n    render() {\n        const {setFirstName, setLastName, setTitle, setAddress, setPhoneNumber, setEmail, \n            setDescription, currentState} = this.props;\n        return (\n            <div className = \"personal-info\"> \n                <h1 className =\"editor-header\">Personal Info</h1>\n                <input type = \"text\" placeholder = \"First name\" onChange = {(e) => {this.handler( e, setFirstName)}} value = {currentState.firstName}></input>\n                <input type = \"text\" placeholder = \"Last name\" onChange = {(e) => {this.handler( e, setLastName)}}value = {currentState.lastName}></input>\n                {/*add photo option here? */}\n                <input type = \"text\" placeholder = \"Title\" onChange = {(e) => {this.handler( e, setTitle)}} value = {currentState.title}></input>\n                <input type = \"text\" placeholder = \"Address\" onChange = {(e) => {this.handler( e, setAddress)}} value = {currentState.address}></input>\n                <input type = \"text\" placeholder = \"Phone number\" onChange = {(e) => {this.handler( e, setPhoneNumber)}} value = {currentState.phoneNumber}></input>\n                <input type = \"text\" placeholder = \"Email\" onChange = {(e) => {this.handler( e, setEmail)}} value = {currentState.email}></input>\n                <input type = \"text\" placeholder = \"Description\" onChange = {(e) => {this.handler( e, setDescription)}} value = {currentState.description}></input>\n\n            </div>\n        );\n    }\n}\n\nexport default PersonalInfo;","import React from \"react\";\n\nclass EducationInputList extends React.Component{\n\n\n    constructor(props){\n        super(props);\n        this.updateEducation = this.updateEducation.bind(this);\n        this.deleteEducation = this.deleteEducation.bind(this);\n    }\n\n    deleteEducation( uniqid, func) {\n        func(uniqid);\n    }\n\n    updateEducation( event, educationItem, uniqid, key, func) {\n        educationItem[key] = event.target.value;\n        func( educationItem, uniqid);\n    }    \n    render() {\n        const {educationList, updateEducationList, deleteEducationList} = this.props;\n\n        return (\n            <div className = \"education-input-list\">\n                {educationList.map( (educationItem) => {\n                    return <div className = \"education-inputs\" key = {educationItem.uniqid}>\n                            <input type = \"text\" placeholder = \"Institution\" defaultValue = {educationItem[\"institution\"]} \n                            onChange = {(e) => { this.updateEducation(e, educationItem, educationItem.uniqid, \"institution\", updateEducationList) }}/>\n                            <input type = \"text\" placeholder = \"City\" defaultValue = {educationItem[\"city\"]}\n                            onChange = {(e) => { this.updateEducation(e, educationItem, educationItem.uniqid, \"city\", updateEducationList) }}/>\n                            <input type = \"text\" placeholder = \"Degree\" defaultValue = {educationItem[\"degree\"]}\n                            onChange = {(e) => { this.updateEducation(e, educationItem, educationItem.uniqid, \"degree\", updateEducationList) }}/>\n                            <input type = \"text\" placeholder = \"Major\" defaultValue = {educationItem[\"major\"]}\n                            onChange = {(e) => { this.updateEducation(e, educationItem, educationItem.uniqid, \"major\", updateEducationList) }}/>\n                            <input type = \"text\" placeholder = \"From\" defaultValue = {educationItem[\"from\"]}\n                            onChange = {(e) => { this.updateEducation(e, educationItem, educationItem.uniqid, \"from\", updateEducationList) }}/>\n                            <input type = \"text\" placeholder = \"To\" defaultValue = {educationItem[\"to\"]}\n                            onChange = {(e) => { this.updateEducation(e, educationItem, educationItem.uniqid, \"to\", updateEducationList) }}/>\n                            <button className = \"delete-button\" onClick = { (e) => { this.deleteEducation( educationItem.uniqid, deleteEducationList)} }>Delete</button>\n                    </div>;\n                })} \n                \n            </div>\n        );\n    }\n}\n\nexport default EducationInputList;","import React from \"react\";\nimport uniqid from \"uniqid\";\nimport EducationInputList from \"./EducationInputList\";\n\nclass Education extends React.Component{\n\n\n    constructor(props){\n        super(props);\n        this.addEducation = this.addEducation.bind(this);\n    }\n\n    addEducation(func) {\n        //create education input object\n        let educationInput = {\n            institution: \"\",\n            city : '',\n            degree:'',\n            major:'',\n            from:'',\n            to:'' ,\n            uniqid: uniqid(), \n        }\n        func( educationInput);\n    }\n\n    render() {\n        const {educationList, addEducationList, updateEducationList , deleteEducationList} = this.props;\n        return (\n            <div className = \"education\"> \n                <h1 className = \"editor-header\">Education</h1>\n                {/*list of educatoin inputs*/}\n                <EducationInputList educationList = {educationList } updateEducationList = {updateEducationList }\n                deleteEducationList = {deleteEducationList} />\n                <button className = \"add-button\" onClick = {addEducationList}>Add</button>\n            </div>\n        );\n    }\n}\n\nexport default Education;","import React from \"react\";\nimport Experience from \"./Experience\";\nimport PersonalInfo from \"./PersonalInfo\";\nimport Education from \"./Education\";\nimport \"../styles/Editor.css\";\n\nclass Editor extends React.Component{\n\n\n    constructor(props){\n        super(props);\n        \n        this.printDiv = this.printDiv.bind(this);\n    }\n    \n    printDiv() {\n        window.print();\n  \n    }\n\n    render() {\n        const {setFirstName, setLastName, setTitle, setAddress, setPhoneNumber, setEmail, \n            setDescription, educationList, experienceList, addEducationList, addExperienceList, updateEducationList\n        , updateExperienceList ,deleteEducationList, deleteExperienceList, clearAll, currentState} = this.props;\n\n        return (\n            <div className = \"editor\"> \n                <PersonalInfo setFirstName = {setFirstName}\n                    setLastName = {setLastName}\n                    setTitle = {setTitle}\n                    setAddress = {setAddress}\n                    setPhoneNumber = {setPhoneNumber}\n                    setEmail = {setEmail}\n                    setDescription = {setDescription}\n                    currentState = {currentState}\n                />\n                <Education \n                    educationList = {educationList}\n                    addEducationList = {addEducationList}\n                    updateEducationList = {updateEducationList}\n                    deleteEducationList = {deleteEducationList}\n                />\n\n                <Experience \n                    experienceList ={ experienceList}\n                    addExperienceList = {addExperienceList}\n                    updateExperienceList = {updateExperienceList}\n                    deleteExperienceList = {deleteExperienceList}\n\n                />\n                <button className = \"pdf-button\" onClick = {this.printDiv}>PDF</button>\n                <button className = \"clear-button\" onClick = {clearAll}>Clear</button>\n\n            </div>\n        );\n    }\n}\n\nexport default Editor;","import React from \"react\";\n\nclass PreviewHeader extends React.Component{\n\n\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        const {firstName, lastName, title} = this.props;\n        return (\n            <div className = \"preview-header\"> \n                <h1 className = \"preview-name\">{firstName + \" \"+lastName}</h1>\n                <h1 className = \"preview-title\">{title}</h1>\n            </div>\n        );\n    }\n}\n\nexport default PreviewHeader;","import React from \"react\";\n\nclass EducationListOutput extends React.Component{\n\n\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        const {educationList} = this.props;\n        return (\n            <div> \n                {educationList.map((educationItem) => {\n                    return (\n                        <div className = \"college-item\" key = {educationItem.uniqid}>\n                            <div className = \"date\">\n                                <p><b>{educationItem[\"from\"] + \" - \" +educationItem[\"to\"]}</b></p>\n                            </div>\n                            <div className = \"college-info\">\n                                <h4>{educationItem[\"institution\"] + ', ' + educationItem[\"city\"]}</h4>\n                                <p >Degree: {educationItem[\"degree\"]}</p>\n                                <p>Major: {educationItem[\"major\"]}</p>\n                            </div>\n                           \n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default EducationListOutput;","import React from \"react\";\n\nclass ExperienceOutputList extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const {experienceList} = this.props;\n        return (\n            <div> \n                {experienceList.map((experienceItem) => {\n                    return (\n                        <div className = \"experience-item\" key = {experienceItem.uniqid}>\n                            <div className = \"date\">\n                                <p><b>{experienceItem[\"from\"] + \" - \" +experienceItem[\"to\"]}</b></p>\n                            </div>\n                            <div className = \"job-info\">\n                                <h4>{experienceItem[\"company\"] + ', ' + experienceItem[\"city\"]}</h4>\n                                <p>Position: {experienceItem[\"position\"]}</p>\n                            </div>\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default ExperienceOutputList;","import React from \"react\";\nimport EducationListOutput from \"./EducationOutputList\";\nimport ExperienceOutputList from \"./ExperienceOutputList\";\n\nclass PreviewMain extends React.Component{\n\n\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        const { description, educationList, experienceList} = this.props;\n        return (\n            <div className = \"preview-main\">\n                <h2 className = \"preview-subtitle\" id = \"about-me\">About Me</h2> \n                <p className =\"description\">{description}</p>\n                <h2 className = \"preview-subtitle\">Education</h2>\n                <EducationListOutput educationList = {educationList}/>\n                <h2 className = \"preview-subtitle\">Experience</h2>\n                <ExperienceOutputList experienceList = {experienceList}/>\n            </div>\n        );\n    }\n}\n\nexport default PreviewMain;","import React from \"react\";\n\nclass PreviewPersonal extends React.Component{\n\n\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        const { address, phoneNumber, email } = this.props;\n        return (\n            <div className=\"preview-personal\"> \n                <h2 className = \"preview-subtitle\" id =\"personal-details\">Personal Details</h2>\n                <p><b>Address:</b> {address}</p>\n                <p><b>Phone Number:</b> {phoneNumber}</p>\n                <p><b>Email:</b> {email}</p>\n\n            </div>\n        );\n    }\n}\n\nexport default PreviewPersonal;","import React from \"react\";\nimport PreviewHeader from \"./PreviewHeader\";\nimport PreviewMain from \"./PreviewMain\";\nimport PreviewPersonal from \"./PreviewPersonal\";\nimport \"../styles/Preview.css\";\n\n\nclass Preview extends React.Component{\n\n\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        const {firstName, lastName, title, address, phoneNumber, email, \n            description, educationList, experienceList} = this.props;\n        return (\n            <div className = \"preview\" id = \"preview\"> \n                <PreviewHeader firstName = {firstName}\n                                lastName = {lastName}\n                                title = {title}\n                />\n                <PreviewPersonal address = {address}\n                                phoneNumber = {phoneNumber}\n                                email = {email}\n                />\n                <PreviewMain description = {description}\n                            educationList = {educationList}\n                            experienceList = {experienceList}\n                />\n                \n            </div>\n        );\n    }\n}\n\nexport default Preview;","import React from \"react\";\nimport Editor from \"./Editor\";\nimport Preview from \"./Preview\";\nimport uniqid from \"uniqid\";\nimport update from 'immutability-helper';\nimport \"../styles/Body.css\";\n\nclass Body extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName:'',\n            lastName:'',\n            title:'',\n            address:'',\n            phoneNumber:'',\n            email:'',\n            description:'',\n            educationList: [],\n            experienceList: [],\n            //Preview must also know the education and experience lists\n        }\n\n        this.setFirstName = this.setFirstName.bind(this);\n        this.setLastName = this.setLastName.bind(this);\n        this.setTitle = this.setTitle.bind(this);\n        this.setAddress = this.setAddress.bind(this);\n        this.setPhoneNumber = this.setPhoneNumber.bind(this);\n        this.setEmail = this.setEmail.bind(this);\n        this.setDescription = this.setDescription.bind(this);\n        this.addEducationList = this.addEducationList.bind(this);\n        this.addExperienceList = this.addExperienceList.bind(this);\n        this.updateEducationList = this.updateEducationList.bind(this);\n        this.updateExperienceList = this.updateExperienceList.bind(this);\n        this.deleteEducationList = this.deleteEducationList.bind(this);\n        this.deleteExperienceList = this.deleteExperienceList.bind(this);\n        this.clearAll = this.clearAll.bind(this);\n\n    }\n\n\n    setFirstName( inputFirstName ) {\n        this.setState( {\n            firstName:inputFirstName,\n        })\n    }\n\n    setLastName( inputLastName ) {\n        this.setState( {\n            lastName:inputLastName,\n        })\n    }\n\n    setTitle( inputTitle ) {\n        this.setState( {\n            title:inputTitle,\n        })\n    }\n\n    setAddress( inputAddress ) {\n        this.setState( {\n            address:inputAddress,\n        })\n    }\n    setPhoneNumber( inputPhoneNumber ) {\n        this.setState( {\n            phoneNumber:inputPhoneNumber,\n        })\n    }\n    setEmail( inputEmail ) {\n        this.setState( {\n            email:inputEmail,\n        })\n    }\n\n    setDescription( inputDescription) {\n        this.setState({\n            description:inputDescription,\n        })\n    }\n\n    addEducationList(  ) {\n        let educationInput = {\n            institution: \"\",\n            city : '',\n            degree:'',\n            major:'',\n            from:'',\n            to:'' ,\n            uniqid: uniqid(), \n        }\n        this.setState({\n           educationList: this.state.educationList.concat(educationInput), \n        })\n    }\n\n    addExperienceList(  ) {\n        let experienceInput = {\n            company: \"\",\n            position : '',\n            city:'',\n            from:'',\n            to:'' ,\n            uniqid: uniqid(), \n        }\n        this.setState({\n           experienceList: this.state.experienceList.concat(experienceInput), \n        })\n    }\n\n    updateEducationList( newEducation , uniqid) {\n        //find old posiiton\n        console.log(this.state.educationList);\n        let index = this.state.educationList.findIndex( (item) => item.uniqid === uniqid);\n        let updatedEducationList = update( this.state.educationList, {$splice: [[index, 1, newEducation]]})\n\n        this.setState( {\n            educationList: updatedEducationList\n        })\n    }\n\n    updateExperienceList( newExperience , uniqid) {\n        let index = this.state.experienceList.findIndex( (item) => item.uniqid === uniqid);\n        let updatedExperienceList = update( this.state.experienceList, {$splice: [[index, 1, newExperience]]})\n\n        this.setState( {\n            experienceList: updatedExperienceList\n        })\n    }\n\n    deleteEducationList( uniqid) {\n        let filteredArray = this.state.educationList.filter( item => item.uniqid != uniqid) ;\n\n        this.setState( {\n            educationList : filteredArray\n        })\n    }\n\n    deleteExperienceList ( uniqid) {\n        let filteredArray = this.state.experienceList.filter( item => item.uniqid != uniqid) ;\n\n        this.setState( {\n            experienceList : filteredArray\n        })\n    }\n\n    clearAll() {\n\n        this.setState({\n            firstName:'',\n            lastName:'',\n            title:'',\n            address:'',\n            phoneNumber:'',\n            email:'',\n            description:'',\n            educationList: [],\n            experienceList: [],\n        })\n    }\n\n\n\n\n    render() {\n        const {firstName, lastName, title, address, phoneNumber, email, \n            description, educationList, experienceList} = this.state;\n        return (\n            <div className = \"body\">\n                <Editor  setFirstName= {this.setFirstName} \n                    setLastName= {this.setLastName}\n                    setTitle= {this.setTitle}\n                    setAddress= {this.setAddress}\n                    setPhoneNumber= {this.setPhoneNumber}\n                    setEmail= {this.setEmail}\n                    setDescription= {this.setDescription}\n                    educationList = {educationList} \n                    experienceList ={experienceList}\n                    addEducationList= {this.addEducationList}\n                    addExperienceList= {this.addExperienceList}\n                    updateEducationList = {this.updateEducationList}\n                    updateExperienceList = {this.updateExperienceList}\n                    deleteEducationList = {this.deleteEducationList}\n                    deleteExperienceList = {this.deleteExperienceList}\n                    clearAll = {this.clearAll}\n                    currentState = {this.state}\n                />\n                <Preview firstName = {firstName}\n                    lastName = {lastName}\n                    title = {title}\n                    address = {address}\n                    phoneNumber = {phoneNumber}\n                    email = {email}\n                    description = {description}\n                    educationList = {educationList}\n                    experienceList = {experienceList}\n                />\n            </div>\n            \n        );\n    }\n\n}\n\nexport default Body;","import Body from \"./components/Body\";\nimport \"./styles/App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>Create-A-Resume</header>\n      <Body className = \"body\" />\n      <footer>Created By Seulchan Han</footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}